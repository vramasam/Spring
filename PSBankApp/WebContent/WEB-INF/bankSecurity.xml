<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security.xsd">

	<!-- In this configuration, http element automatically configures the basic security services that our web application requires
	 (i) use-expressions is used to secure the individual URL
	 (ii) with in the http element configuration to restrict the particular URL with one or more intercept-url, 
	 this in turn expect the access(hasRole, isAuthenticated, isFullyAuthenticated, permitAll, denyAll 
	 (iii) Always include the wild card for the pattern, else URL pattern that wont match any of the
	  URL that has the request parameter, as a result hackers can easily skip the security 
	  check by appending any request parameter,
	  LoginScreen provied by browser because of http-basic
	 -->
	<http auto-config="true" use-expressions="true">
		<intercept-url pattern="/list*" access="hasRole('ROLE_ADMIN')"/>
		 <!-- <http-basic /> -->
		<form-login login-page="/user/login" authentication-failure-url="/user/login?error=true"
		username-parameter="username"
		password-parameter="password"
		default-target-url="/list" />
		
		<!-- Its should not disabled -->
	    <csrf disabled="true"/>
	</http>
	
	<!-- Spring security provides several ways of authenticate the user such as authentcaite against
	database or LDAP repository and also support to define the user details in the user service
	 directly for simple security mechanism -->
	<authentication-manager>
	   <authentication-provider>
	        <!-- Setting the user info directly -->
	   		<!-- <user-service>
	   			<user name="vivek" password="ramasamy" authorities="ROLE_ADMIN"/>
	   			<user name="gomi" password="veeru" authorities="ROLE_USER"/>
	   		</user-service> -->
	   		<!-- Setting the user info from properties -->
	   		<!--  <user-service properties="/WEB-INF/user.properties"></user-service>-->
	   		<jdbc-user-service data-source-ref="dataSource"
	   		   users-by-username-query="SELECT username, password, 'true' as enabled FROM member WHERE username= ?"
	   		   authorities-by-username-query="SELECT member.username, member_role.role as authorities FROM member, member_role
	   		      WHERE member.username= ? AND member.id = member_role.member_id"/>
	   </authentication-provider>
	</authentication-manager>

</beans:beans>

